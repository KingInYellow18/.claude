{
  "permissions": {
    "allow": [
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Bash(npm test:*)",
      "Bash(git status)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push)",
      "Bash(git config:*)",
      "Bash(git tag:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git stash:*)",
      "Bash(git reset:*)",
      "Bash(git rev-parse:*)",
      "Bash(git ls-files:*)",
      "Bash(gh:*)",
      "Bash(node:*)",
      "Bash(which:*)",
      "Bash(pwd)",
      "Bash(ls:*)",
      "Bash(jq:*)",
      "Bash(test:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(curl:*)",
      "Bash(mkdir:*)",
      "Bash(cd:*)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(./.claude/helpers/*)"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(curl | bash)",
      "Bash(wget | sh)",
      "Bash(eval:*)"
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); model_name=$(echo \"$input\" | jq -r '.model.display_name'); current_dir=$(echo \"$input\" | jq -r '.workspace.current_dir'); project_dir=$(echo \"$input\" | jq -r '.workspace.project_dir'); relative_path=$(echo \"${current_dir#$project_dir}\"); if [ \"$relative_path\" = \"$current_dir\" ]; then display_path=$(basename \"$current_dir\"); else display_path=\"$(basename \"$project_dir\")${relative_path}\"; fi; printf \"$(whoami)@$(hostname -s):${display_path} [${model_name}]\""
  },
  "includeCoAuthoredBy": true,
  "enabledMcpjsonServers": []
}